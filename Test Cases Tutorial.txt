Correct and Incorrect Examples for each Test Case as a Tutorial

Test Case 1 - List reversal (tail-recursive)

Correct Example

reverse(L
 R) :- reverse_acc(L
 []
 R).

reverse_acc([]
 Acc
 Acc).

reverse_acc([H|T]
 Acc
 R) :- reverse_acc(T
 [H|Acc]
 R).
 
Incorrect Example

reverse_acc([H|T]
 Acc
 R) :- reverse_acc(T
 Acc
 R).  % H is dropped; incorrect

Test Case 2 - List reversal (naive)

Correct Example

reverse([]
 []).

reverse([H|T]
 R) :- reverse(T
 RT)
 append(RT
 [H]
 R).

Incorrect Example

reverse([H|T]
 R) :- append(RT
 [H]
 R).  % Missing reverse(T
 RT)

Test Case 3 - Factorial (structural recursion)

Correct Example

fact(0
 1).

fact(N
 F) :- N > 0
 N1 is N - 1
 fact(N1
 F1)
 F is N * F1.

Incorrect Example
 
fact(N
 F) :- N1 is N - 1
 fact(N1
 F1)
 F is N * F1.  % Missing base case

Test Case 4 - Fibonacci (bad base case)

Correct Example

fib(0
 0).

fib(1
 1).

fib(N
 F) :- N > 1
 N1 is N - 1
 N2 is N - 2
 fib(N1
 F1)
 fib(N2
 F2)
 F is F1 + F2.

Incorrect Example
 
fib(1
 1).

fib(N
 F) :- N1 is N - 1
 N2 is N - 2
 fib(N1
 F1)
 fib(N2
 F2)
 F is F1 + F2.  % Missing fib(0
 0)

Test Case 5 - Incorrect append (base case missing)

Correct Example

append([]
 L
 L).

append([H|T]
 L
 [H|R]) :- append(T
 L
 R).

Incorrect Example
 
append([H|T]
 L
 [H|R]) :- append(T
 L
 R).  % Missing append([]
 L
 L)

Test Case 6 - Infinite recursion (no structural progress)

Correct Example

decrease(0).

decrease(N) :- N > 0
 N1 is N - 1
 decrease(N1).

Incorrect Example

decrease(N) :- decrease(N).  % No termination

Test Case 7 - Tree traversal (inorder)

Correct Example

inorder(nil
 []).

inorder(tree(L
 V
 R)
 Xs) :- inorder(L
 XL)
 inorder(R
 XR)
 append(XL
 [V|XR]
 Xs).

Incorrect Example
 
inorder(tree(L
 V
 R)
 Xs) :- append(XL
 [V|XR]
 Xs).  % Missing recursive calls

Test Case 8 - Tree sum (non-tail-recursive)

Correct Example

tsum(nil
 0).

tsum(tree(L
 V
 R)
 S) :- tsum(L
 SL)
 tsum(R
 SR)
 S is SL + V + SR.

Incorrect Example
 
tsum(tree(L
 V
 R)
 S) :- S is V.  % Missing subtrees

Test Case 9 - Tree sum (tail-recursive)

Correct Example

tsum(T
 S) :- tsum_acc(T
 0
 S).

tsum_acc(nil
 Acc
 Acc).

tsum_acc(tree(L
 V
 R)
 Acc
 S) :- tsum_acc(L
 Acc
 SL)
 Sum1 is SL + V
 tsum_acc(R
 Sum1
 S).

Incorrect Example
 
tsum_acc(tree(L
 V
 R)
 Acc
 S) :- tsum_acc(R
 Acc
 S).  % Ignores L and V

Test Case 10 - Incorrect accumulator use

Correct Example

sum([]
 Acc
 Acc).

sum([H|T]
 Acc
 Res) :- NewAcc is Acc + H
 sum(T
 NewAcc
 Res).

Incorrect Example
 
sum([H|T]
 Acc
 Res) :- sum(T
 Acc
 Res).  % Acc not updated
